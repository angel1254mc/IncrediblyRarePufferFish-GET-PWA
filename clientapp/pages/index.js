import Head from "next/head";
import styles from "../styles/Home.module.css";
import React, {useEffect, useState} from 'react';
import TextField from "@mui/material/TextField";
import Autocomplete from "@mui/material/Autocomplete";
import NavBar from "../components/NavBar";
import data from "../src/frontendDevFakeData/fakeData";
import HitCard from "../components/HitCard";
import NoHits from "../components/NoHits";

const foundInArray = (el, arr) => {
  for (let i = 0; i < arr.length; i++)
  {
    if (el.TITLE == arr[i].TITLE)
      return true;
  }
  return false;
}
const getAllElements = async () => {
  let url = "http://localhost:3000/api/GETRetrieveCollection?";
  const manyElements = await fetch(url, {method: 'GET'}).then(response => response.json());
  return manyElements;
}
const getSearchResults = async (searchStr) => {
  try  {
    let searchableStr = searchStr.replace(/\s/g, "+");
    let url = "http://localhost:3000/api/GETSearchOptimized?searchTerm=" + searchableStr;

    let searchResultData = await fetch(url, {method: 'GET'}).then(response => response.json());
    return searchResultData;
  }
  catch (err)
  {
    console.log(err);
  }
}
  
export default function Home() {

    const [options, setOptions] = useState([]);
    const [allElements, setAllElements] = useState([]);
    const [search, setSearch] = useState("");
    let count = 0;
    const onNewSearch = async (e) => {
      setSearch(e.target.value);
      if (e.target.value) {
        let data = await getSearchResults(e.target.value);
        setOptions(data);
      }
    }
    const populateAllElements = async () => {
      let data = await getAllElements();
      console.log(data);
      setAllElements(data);
    }

    useEffect(() => {
      //Do something with this later maybe
      populateAllElements();
    }, [])
    return (
        <div className="w-full">
            <Head>
                <title>GET APP PWA</title>
                <link rel="icon" href="/favicon.ico" />
            </Head>
  
            <main className="flex w-auto flex-col items-center justify-center">
                <NavBar></NavBar>
                <div className ="w-4/5 mt-2">
                  <TextField 
                  className= "w-full"  
                  label = "GETSearch"
                  value = {search}
                  onChange={(e) => {onNewSearch(e);}}
                  />
                </div>
                <div className="w-4/5 py-5">
                  {options && options.length > 0 ? options.map((hit) => {
                    count++;
                    return <HitCard key={count} termData={hit}></HitCard>
                  }) : options && options.length == 0 && search != "" 
                  ? <NoHits></NoHits>
                  : []
                  }
                  <div className=" bg-gray-400 text-white flex justify-center items-center px-2 py-3 w-full h-10 mb-4 rounded-lg overflow-y-hidden">
                    <h1 className="font-light text-md">Additional Results</h1>
                  </div>
                  {allElements ? allElements.map((el) => {
                      if (!foundInArray(el, options))
                      {
                        count++;
                        if (count > 50)
                        {

                          return
                        }
                        return <HitCard key={count} termData={el}></HitCard>;
                      }
                    }) : []
                  }
                </div>
            </main>
        </div>
    );
}












/**import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}**/
